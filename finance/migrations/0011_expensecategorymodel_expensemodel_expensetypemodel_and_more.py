# Generated by Django 5.0 on 2024-02-21 12:07

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('finance', '0010_alter_registrationpaymentmodel_options'),
        ('human_resource', '0010_alter_staffmodel_bank_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExpenseCategoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExpenseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('amount', models.FloatField()),
                ('date', models.DateTimeField(blank=True)),
                ('expense_proof', models.FileField(blank=True, null=True, upload_to='finance/expense')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExpenseTypeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='IncomeCategoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='IncomeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('amount', models.FloatField()),
                ('date', models.DateTimeField(blank=True)),
                ('income_proof', models.FileField(blank=True, null=True, upload_to='finance/income')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='IncomeSourceModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentIDGeneratorModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_id', models.IntegerField()),
                ('last_payment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, choices=[('s', 'SUCCESS'), ('f', 'FAIL')], default='f', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='PayrollModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salary', models.FloatField()),
                ('loan_deduction', models.FloatField()),
                ('other_deduction', models.FloatField()),
                ('bonus', models.FloatField()),
                ('payable', models.FloatField()),
                ('date_prepared', models.DateField(auto_now_add=True)),
                ('confirmation_date', models.DateField(blank=True, null=True)),
                ('month', models.DateField()),
                ('confirmation_status', models.CharField(blank=True, choices=[('pending', 'PENDING'), ('confirmed', 'CONFIRMED')], default=('pending', 'PENDING'), max_length=20)),
                ('payment_status', models.BooleanField(blank=True, default=False)),
            ],
        ),
        migrations.CreateModel(
            name='StaffBonusModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('subject', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('status', models.CharField(blank=True, choices=[('pending', 'PENDING'), ('confirmed', 'CONFIRMED')], default=('pending', 'PENDING'), max_length=20)),
                ('confirmation_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StaffDeductionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('purpose', models.TextField(blank=True, null=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('status', models.CharField(blank=True, choices=[('pending', 'PENDING'), ('confirmed', 'CONFIRMED')], default=('pending', 'PENDING'), max_length=20)),
                ('confirmation_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StaffLoanModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('date', models.DateField(auto_now_add=True)),
                ('confirmation_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('pending', 'PENDING'), ('confirmed', 'CONFIRMED')], default=('pending', 'PENDING'), max_length=20)),
                ('refund_type', models.CharField(blank=True, choices=[('salary', 'NEXT SALARY'), ('date', 'SPECIFIC DATE')], default=('salary', 'NEXT SALARY'), max_length=50)),
                ('is_refunded', models.BooleanField(default=False)),
                ('expected_refund_date', models.DateTimeField(blank=True, null=True)),
                ('refund_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.AddConstraint(
            model_name='expensecategorymodel',
            constraint=models.UniqueConstraint(fields=('name',), name='unique_expense_source_combo', violation_error_message='Expense Category Already Exists'),
        ),
        migrations.AddField(
            model_name='expensemodel',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance.expensecategorymodel'),
        ),
        migrations.AddField(
            model_name='expensemodel',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expense_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='expensemodel',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='expensetypemodel',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_types', to='finance.expensecategorymodel'),
        ),
        migrations.AddField(
            model_name='expensemodel',
            name='expense_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance.expensetypemodel'),
        ),
        migrations.AddField(
            model_name='incomecategorymodel',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='incomemodel',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance.incomecategorymodel'),
        ),
        migrations.AddField(
            model_name='incomemodel',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='incomesourcemodel',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='incomemodel',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance.incomesourcemodel'),
        ),
        migrations.AddField(
            model_name='payrollmodel',
            name='staff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='human_resource.staffmodel'),
        ),
        migrations.AddField(
            model_name='staffbonusmodel',
            name='staff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='human_resource.staffmodel'),
        ),
        migrations.AddField(
            model_name='staffdeductionmodel',
            name='staff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='human_resource.staffmodel'),
        ),
        migrations.AddField(
            model_name='staffloanmodel',
            name='staff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='human_resource.staffmodel'),
        ),
        migrations.AddConstraint(
            model_name='incomecategorymodel',
            constraint=models.UniqueConstraint(fields=('name',), name='unique_income_category_combo', violation_error_message='Income Category Already Exists'),
        ),
        migrations.AddConstraint(
            model_name='incomesourcemodel',
            constraint=models.UniqueConstraint(fields=('name',), name='unique_income_source_combo', violation_error_message='Income Source Already Exists'),
        ),
        migrations.AddConstraint(
            model_name='incomemodel',
            constraint=models.UniqueConstraint(fields=('invoice_number',), name='unique_income_invoice_combo', violation_error_message='Income Source Already Exists'),
        ),
    ]
